// <auto-generated />
using MarketCore.EmunsAndConst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using OnlineBoutique.Data;
using System;

namespace OnlineBoutique.Migrations
{
    [DbContext(typeof(BoutiqueContex))]
    partial class BoutiqueContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarketCore.Classes.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DressType");

                    b.Property<int>("Gender");

                    b.Property<int>("Season");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MarketCore.Classes.ColorVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColorImageURLsId");

                    b.HasKey("Id");

                    b.HasIndex("ColorImageURLsId");

                    b.ToTable("ColorVariation");
                });

            modelBuilder.Entity("MarketCore.Classes.FilePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ColorVariationId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("ColorVariationId");

                    b.ToTable("FilePath");
                });

            modelBuilder.Entity("MarketCore.Classes.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<int>("OrderStatus");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MarketCore.Classes.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<int?>("ImageUrlId");

                    b.Property<string>("Name");

                    b.Property<int?>("StorehouseId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageUrlId");

                    b.HasIndex("StorehouseId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MarketCore.Classes.ProductVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BaseProductId");

                    b.Property<int?>("ColorVariationId");

                    b.Property<int>("CountInStore");

                    b.Property<int?>("OrderId");

                    b.Property<double>("Price");

                    b.Property<int?>("SizeVariationId");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("ColorVariationId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SizeVariationId");

                    b.ToTable("ProductVariations");
                });

            modelBuilder.Entity("MarketCore.Classes.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SizeVariationId");

                    b.Property<int>("TypeSize");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("SizeVariationId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("MarketCore.Classes.SizeVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NamedSize");

                    b.HasKey("Id");

                    b.ToTable("SizeVariation");
                });

            modelBuilder.Entity("MarketCore.Classes.Storehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adress");

                    b.Property<string>("ContactNumber");

                    b.HasKey("Id");

                    b.ToTable("Storehouses");
                });

            modelBuilder.Entity("MarketCore.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Email");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MarketCore.Classes.ColorVariation", b =>
                {
                    b.HasOne("MarketCore.Classes.FilePath", "ColorImageURLs")
                        .WithMany()
                        .HasForeignKey("ColorImageURLsId");
                });

            modelBuilder.Entity("MarketCore.Classes.FilePath", b =>
                {
                    b.HasOne("MarketCore.Classes.ColorVariation")
                        .WithMany("ImageURLs")
                        .HasForeignKey("ColorVariationId");
                });

            modelBuilder.Entity("MarketCore.Classes.Order", b =>
                {
                    b.HasOne("MarketCore.Classes.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("MarketCore.Classes.Product", b =>
                {
                    b.HasOne("MarketCore.Classes.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("MarketCore.Classes.FilePath", "ImageUrl")
                        .WithMany()
                        .HasForeignKey("ImageUrlId");

                    b.HasOne("MarketCore.Classes.Storehouse")
                        .WithMany("Products")
                        .HasForeignKey("StorehouseId");
                });

            modelBuilder.Entity("MarketCore.Classes.ProductVariation", b =>
                {
                    b.HasOne("MarketCore.Classes.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId");

                    b.HasOne("MarketCore.Classes.ColorVariation", "ColorVariation")
                        .WithMany()
                        .HasForeignKey("ColorVariationId");

                    b.HasOne("MarketCore.Classes.Order")
                        .WithMany("ShoppingList")
                        .HasForeignKey("OrderId");

                    b.HasOne("MarketCore.Classes.SizeVariation", "SizeVariation")
                        .WithMany()
                        .HasForeignKey("SizeVariationId");
                });

            modelBuilder.Entity("MarketCore.Classes.Size", b =>
                {
                    b.HasOne("MarketCore.Classes.SizeVariation")
                        .WithMany("ListParams")
                        .HasForeignKey("SizeVariationId");
                });
#pragma warning restore 612, 618
        }
    }
}
