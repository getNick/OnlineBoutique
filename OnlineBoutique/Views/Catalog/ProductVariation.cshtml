@using MarketCore.EmunsAndConst
@using OnlineBoutique.Models.EmunsAndConst
@model OnlineBoutique.Models.CatalogViewModels.SkirtProducViewModel
@{
    ViewData["Title"] = "ProductVariation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<input type="button" value="Добавить размер" onclick="location.href='@Url.Action("CreateSizeVariation", "Catalog",new{productVariationId=Model.Product.ProductVariationId})'" />
<h2 class="form-product-name">@Model.Product.BaseProduct.Name</h2>
<div class="col-lg-6">
    <p>@Model.Product.BaseProduct.Description</p>
</div>
<div class="col-lg-6" style="height: 400px;">
    <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">

        <!-- indicators -->
        <ol class="carousel-indicators">
            @for (int i = 0; i < Model.Product.ColorVariation.ImageURLs.Count; i++)
            {
                if (i == 0)
                {
                    <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                }
                else
                {
                    <li data-target="#carousel-example-generic" data-slide-to="@i"></li>
                }
            }

        </ol>

        <!-- inner -->
        <div class="carousel-inner" role="listbox">
            @for (int i = 0; i < Model.Product.ColorVariation.ImageURLs.Count; i++)
            {
                if (@i == 1)
                {
                    <div class="item active" align="center">
                        <img style="height: 400px; width: auto;"
                             src="@Url.Content("~/images/products/" + Model.Product.ColorVariation.ImageURLs[i].Path)" />
                    </div>
                }
                else
                {
                    <div class="item" align="center">
                        <img style="height: 400px; width: auto;" src="@Url.Content("~/images/products/" + Model.Product.ColorVariation.ImageURLs[i].Path)" />
                    </div>
                }
            }
        </div>

        <!-- controls -->
        <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>

    </div>

</div>


<div class="row">
        <div class="form-group col-lg-12">
            <div>
                <ul class="nav nav-tabs" role="tablist">
                    @foreach (var size in Model.Product.SizeVariation)
                    {
                        if (Model.BestSize == size)
                        {
                            <li role="presentation" class="active">
                                <a href="#@size.NamedSize" aria-controls="@size.NamedSize" role="tab" data-toggle="tab">@size.NamedSize</a>
                            </li>
                        }
                        else
                        {
                            <li role="presentation">
                                <a href="#@size.NamedSize" aria-controls="@size.NamedSize" role="tab" data-toggle="tab">@size.NamedSize</a>
                            </li>
                        }

                    }

                </ul>

                <div class="tab-content">
                    @foreach (var size in Model.Product.SizeVariation)
                    {
                        if (Model.BestSize == size)
                        {
                            <div role="tabpanel" class="tab-pane active" id="@size.NamedSize">
                                @await Html.PartialAsync("_RatingTable", size)
                            </div>
                            <div class="tab-pane active" role="tabpanel" id="@size.NamedSize">
                                <br />
                                <br />
                                <div align="center">
                                    <p style="font-size: 24px">@size.SizeResponse</p>
                                </div>
                                <div align="center">
                                    <input type="button" class="btn btn-primary btn-lg" value="Добавить в корзину" onclick="location.href='@Url.Action("AddProductToBacket", "Buying",new{productVariationId=Model.Product.ProductVariationId})'" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div role="tabpanel" class="tab-pane" id="@size.NamedSize">
                                @await Html.PartialAsync("_RatingTable", size)
                            </div>
                            <div class="tab-pane" role="tabpanel" id="@size.NamedSize">
                                <br />
                                <br />
                                <div align="center">
                                    <p style="font-size: 24px">@size.SizeResponse</p>
                                </div>
                                <div align="center">
                                    <input type="button" class="btn btn-primary btn-lg" value="Добавить в корзину" onclick="location.href='@Url.Action("AddProductToBacket", "Buying",new{productVariationId=Model.Product.ProductVariationId})'" />
                                </div>
                            </div>
                        }
                    }


                </div>
            </div>

        </div>
</div>



